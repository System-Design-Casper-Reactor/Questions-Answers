DROP TABLE IF EXISTS photos;
DROP TABLE IF EXISTS answers;
DROP TABLE IF EXISTS questions;

CREATE TABLE IF NOT EXISTS questions(
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  product_id int NOT NULL,
  question_body VARCHAR(1000) NOT NULL,
  asker_name VARCHAR(60) NOT NULL,
  asker_email VARCHAR(60) NOT NULL,
  unix_date bigint,
  question_helpfulness int DEFAULT 0,
  reported boolean DEFAULT false
);
CREATE TABLE IF NOT EXISTS answers(
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  question_id int NOT NULL,
  body VARCHAR(1000) NOT NULL,
  answerer_name VARCHAR(60) NOT NULL,
  answerer_email VARCHAR(60) NOT NULL,
  unix_date bigint,
  helpfulness int DEFAULT 0,
  reported boolean DEFAULT false,
  CONSTRAINT fk_question
    FOREIGN KEY(question_id)
      REFERENCES questions(id)
);
CREATE TABLE IF NOT EXISTS photos(
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  answer_id int NOT NULL,
  url text NOT NULL,
  CONSTRAINT fk_answer
    FOREIGN KEY(answer_id)
      REFERENCES answers(id)
);

\COPY questions(id, product_id, question_body, unix_date, asker_name, asker_email, reported, question_helpfulness) FROM './data/questions.csv' DELIMITER ',' csv header;
\COPY answers(id, question_id, body, unix_date, answerer_name, answerer_email, reported, helpfulness) FROM './data/answers.csv' DELIMITER ',' csv header;
\COPY photos(id, answer_id, url) FROM './data/answers_photos.csv' DELIMITER ',' csv header;

ALTER TABLE questions ADD question_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
UPDATE questions SET question_date = to_timestamp(unix_date/1000);
ALTER TABLE questions DROP COLUMN unix_date;

ALTER TABLE answers ADD date TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
UPDATE answers SET date = to_timestamp(unix_date/1000);
ALTER TABLE answers DROP COLUMN unix_date;

SELECT setval(pg_get_serial_sequence('questions', 'id'), (select max(id) from questions));
SELECT setval(pg_get_serial_sequence('answers', 'id'), (select max(id) from answers));
SELECT setval(pg_get_serial_sequence('photos', 'id'), (select max(id) from photos));